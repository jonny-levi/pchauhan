pipeline {
    // Define global environment variables
    environment {
        GIT_REPO = ''
        DOCKER_REGISTRY = ''
        DOCKER_REGISTRY_TAG = ''
        NAMESPACE = ''
    }

    // Define pipeline stages
    stages {
        // Stage to build and push Docker image using Kaniko on a Kubernetes pod
        stage('Build with Kaniko') {
            agent {
                kubernetes {
                    yamlFile 'kaniko-builder.yaml'  // Define the Kaniko builder pod
                }
            }
            steps {
                container(name: 'kaniko', shell: '/busybox/sh') {
                    script {
                        git branch: 'main', credentialsId: '', url: GIT_REPO
                        sh '''
                        /kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` \
                        --destination=${DOCKER_REGISTRY}:${DOCKER_REGISTRY_TAG} \
                        --insecure --skip-tls-verify
                        '''
                    }
                }
            }
        }

                // Stage to deploy the image to Kubernetes using another agent
        stage('Deploy to Kubernetes') {
            agent {
                label 'kubernetes-deployer'  // Specify another Jenkins agent with a specific label
            }
            steps {
                script {
                    withKubeConfig([credentialsId: 'kubeconfig-credential-id']) {
                        sh '''
                        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
                        sudo apt-get install apt-transport-https --yes
                        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
                        sudo apt-get update
                        sudo apt-get install helm
                        kubectl create namespace ${NAMESPACE} || echo "Namespace ${NAMESPACE} already exists"
                        
                        helm install -f laravel/values.yaml pchauhan-project ./laravel
                        '''
                    }
                }
            }
        }

        // Stage to run unit tests in a Docker container on a different agent
        stage('Run Tests') {
            agent {
                docker {
                    image 'python:3.8'  // Use a Python Docker container for testing
                    args '-v /tmp:/tmp'  // Pass any Docker run arguments here
                }
            }
            steps {
                sh '''
                pip install -r requirements.txt
                pytest
                '''
            }
        }
    }
}
