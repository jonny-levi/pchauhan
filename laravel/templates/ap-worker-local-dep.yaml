apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.worker.deployment }}
  namespace: {{ .Release.Name }}
  labels:
    app: {{ .Values.worker.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.worker.name }}
  replicas: {{ .Values.worker.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.worker.name }}
    spec:
      containers:
        - name: {{ .Values.worker.name }}
          image: {{ .Values.worker.image }}
          command:
          - sh
          - -c
          - |
            cd {{ .Values.worker.volumeMounts.mountPath1.path }}
            COMPOSER_ALLOW_SUPERUSER=1 composer install --no-dev --optimize-autoloader
            composer dump-autoload --optimize
            chmod 777 /var/www/storage/ -R
          ports:
            - containerPort: {{ .Values.worker.service.port }}
          volumeMounts:
          - mountPath: {{ .Values.worker.volumeMounts.mountPath1.path }}
            name: {{.Values.worker.volumeMounts.mountPath1.name }}
          - mountPath: {{ .Values.worker.volumeMounts.mountPath2.path }}
            name: {{.Values.worker.volumeMounts.mountPath2.name }}
      volumes:
      - name: {{.Values.worker.volumeMounts.mountPath1.name}}
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-{{.Values.persistence.webDirectory.pvcName }}"
      - name: {{.Values.worker.volumeMounts.mountPath2.name }}
        configMap:
          name: "{{ .Release.Name }}-{{.Values.configMap.app.name}}"
